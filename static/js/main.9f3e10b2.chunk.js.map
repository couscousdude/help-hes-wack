{"version":3,"sources":["components/assets/Blackman.png","components/Navbar.js","components/Blackman.js","components/assets/BlackManStory.js","components/Footer.js","components/Policy.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","className","style","textAlign","color","BlackmanImg","require","Blackman","React","useState","showStory","setShowStory","src","alt","paddingLeft","window","innerWidth","paddingRight","onClick","Footer","to","Policy","history","useHistory","push","App","from","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8OAAAA,EAAOC,QAAU,IAA0B,sC,mICG5B,SAASC,EAAOC,GAC3B,OACI,yBAAKC,UAAU,UACX,wBAAIA,UAAU,OAAOC,MAAO,CAACC,UAAW,SAAUC,MAAO,UAAzD,4B,YCHNC,G,MAAcC,EAAQ,KAEb,SAASC,EAASP,GAAQ,IAAD,EACFQ,IAAMC,UAAS,GADb,mBAC7BC,EAD6B,KAClBC,EADkB,KAGpC,OACI,yBAAKV,UAAU,QACX,yBAAKW,IAAKP,EAAaQ,IAAI,YAAYZ,UAAU,gBACjD,wBAAIC,MAAO,CAACC,UAAW,SAAUC,MAAO,UAAxC,oBAGA,wBAAIF,MAAO,CAACC,UAAW,SAAUC,MAAO,UAAxC,0CAGA,wBAAIF,MAAO,CAACC,UAAW,SAAUC,MAAO,UAAxC,+BAGEM,EAEE,6BACI,uBAAGR,MAAO,CAACE,MAAO,QAASU,YAAY,GAAD,OAAKC,OAAOC,WAAW,EAAvB,MAA8BC,aAAa,GAAD,OAAKF,OAAOC,WAAW,EAAvB,QCvBtF,mmJD0BM,4BAAQf,UAAU,SAASiB,QAAS,kBAAMP,GAAcD,KAAxD,mBAMJ,4BAAQT,UAAU,SAASiB,QAAS,kBAAMP,GAAcD,KAAxD,wC,ME5BD,SAASS,EAAOnB,GAC3B,OACI,yBAAKC,UAAU,UACX,2BACI,kBAAC,IAAD,CAAMmB,GAAG,WACL,gDCNL,SAASC,EAAOrB,GAC3B,IAAMsB,EAAUC,cAEhB,OACI,6BACI,uBAAGrB,MAAO,CAACC,UAAW,SAAUC,MAAO,UAAvC,kGAGA,4BAAQH,UAAU,SAASiB,QAAS,kBAAMI,EAAQE,KAAK,eAAvD,SCWGC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,KAAK,IAAIN,GAAG,YAAYO,OAAK,IACvC,kBAAC,IAAD,CAAOC,KAAK,YAAYD,OAAK,EAACE,UAAWtB,IACzC,kBAAC,IAAD,CAAOqB,KAAK,UAAUD,OAAK,EAACE,UAAWR,KAEzC,kBAAC,EAAD,QCLcS,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9f3e10b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blackman.bbe97376.png\";","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar(props) {\r\n    return(\r\n        <div className='Navbar'>\r\n            <h2 className='Text' style={{textAlign: 'center', color: 'white'}}>Officer I can't breathe</h2>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Blackman.css';\r\nimport BlackManStory from './assets/BlackManStory';\r\nconst BlackmanImg = require('./assets/Blackman.png');\r\n\r\nexport default function Blackman(props) {\r\n    const [showStory, setShowStory] = React.useState(false);\r\n\r\n    return(\r\n        <div className='root'>\r\n            <img src={BlackmanImg} alt='black man' className='black-image' />\r\n            <h2 style={{textAlign: 'center', color: 'white'}}>\r\n                Look at this man\r\n            </h2>\r\n            <h4 style={{textAlign: 'center', color: 'white'}}>\r\n                Take a closer look at his water bottle\r\n            </h4>\r\n            <h5 style={{textAlign: 'center', color: 'white'}}>\r\n                Why do you think he has it?\r\n            </h5>\r\n            { showStory\r\n                ? (\r\n                <div>\r\n                    <p style={{color: 'white', paddingLeft: `${window.innerWidth/4}px`, paddingRight: `${window.innerWidth/4}px`}}>\r\n                        {BlackManStory}\r\n                    </p>\r\n                    <button className='button' onClick={() => setShowStory(!showStory)}>\r\n                        Hide his story\r\n                    </button>\r\n                </div>\r\n                )\r\n                : (\r\n                <button className='button' onClick={() => setShowStory(!showStory)}>\r\n                    Click this button to show his story\r\n                </button>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","export default `\r\nSo, this black man was roaming around in the daylight, where he was able to be seen, where his black magic won't help him. Someone was \r\nable to see him, so they alerted the police. The police pulled up, and they saw, OH NO, it's a black man, so they called for backup.\r\nThey pulled out the strap. Instead of telling him to put his hands up, they all popped and sprayed him down. Hundreds of cops, the entire Florida police force, sprayed him.\r\nBut since he's a black man, and he's a master of martial arts, since black men are good at everything related to combat, he took off his jacket and revealed he had a suicide vest.\r\nHe pulled out a bunch of glocks, gangster style, and started popping the police. He used his full auto glocks to spray all the cops. So, the cops called in backup. \r\nThey called the national guard. Soon, the black man fled the scene. The police tried to stall him, to wait for the national guard, but the man was too fast.\r\nAll black man excel at being fast and jumping far. Why do you think Usane Bolt is the fastest man on Earth? ITS CUZ HES BLACK. When the national guard came, they brought in the \r\ntanks, the helicopters, everything they could to stop the black man. He outran the tanks, the cars, the planes, and ran to the hood to call for backup. When everyone finally caught\r\nup with the black man, there was a huge army of hood rats ready to support the black man at any cost #blacklivematter. The national guard had to call the president to call in a \r\ninternational task force to take down the hood rats. They got Russia, China, everyone, anyone to come jump the hood rats. And soon, the black man did something nobody expected\r\nthem to do. They called in EVERY black man in the world to come fight for them. They called in Usane Bolt, Martin Luther King Jr., and even Obama. They even called in JUICE WRLD.\r\nThey all pulled up and fought every man there. They fought the british people first. But it was WAYYY to easy cuz the british people can't even use guns. They didn't fight the \r\nCanadians cuz they were tooo nice. They fought the French, but the French had a 500 mile Maginot Line. But the black men had Hitler's good old strategy up their sleeves.\r\nBLITZKRIEGGG!!1!1!! They instantly bypassed Napoleon's 500 mile Maginot Defense, and swiftly took the French down. Then, they fought the chinese, but they stood no chance, because \r\ntheir eyes were TOOO slanted to see the black man. Now, it was nearing nightfall. The black men's power was almost fully charged. The United Nations scrambled all their manpower \r\ntogether to take down the black men before they went invisible. They gathered in all the best white males, such as Donald Trump, Jeff Bezos, George Soros, Tyler \"Ninja\" Blevins,\r\nthe best fortnite player in the world, to take them down. They called in all of his white fortnite viewers to crank up to the black males and beat them up. But it quickly turned to \r\nnightfall, and they couldn't see the black males anymore. The black males swiftly struck from the shadows, the darkness, to take down the whites. They even got their numbero uno \r\nsoldier, Phoenix AKA KSI, to take down Tyler \"Ninja\" Blevins. KSI said, \"JOKES OVER YOURE DEAD\", and struck Ninja. You could hear avengers music in the background, as Ninja \r\nstruggled to crank up to KSI. But then, the white males had a genius idea. They decided to drop chicken and purple Kool-Aid everywhere. This caused the black men to scramble for \r\nthe chicken, but the white male's plan was coming to fruition. They were frantically scrambling for the chicken, but in the chaos, they accidentally spilled the purple Kool-Aid.\r\nThis allowed the white males to use their predominantly caucasian genetics to see the black men, and they quickly struck. While all the white males were busy screaming the \r\nn-word, the black males were too busy eating chicken and spilling Kool-Aid, the fortnite kids started CRANKING INTO THE SKY. George Soros used his Soros Regime to bring in the\r\nbeaners. The beaners tossed around their hot cheetos and further showed the location of the black men. This allowed the white males to pinpoint all of the black men, and \r\nthey easily caught the black men, who did not expect to be seen in the dark. The white males put their knee on the black male's neck, and said, \"1, 2, 3, 4, I declare a race war!\".\r\nThe black men quicky drew up a peace treaty, which stated that \"HELP I CANT BREATHE\" and also stated terms for the usage of the black males' black magic. This pleased the whites, who\r\nhad won the race war, so they gave the black male's some free water to help wash down the Kool Aid powder and chicken. That's how this black man got his water bottle.\r\n`","import React from 'react';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Footer(props) {\r\n    return(\r\n        <div className='footer'>\r\n            <p>\r\n                <Link to='/policy'>\r\n                    <p>Privacy Policy</p>\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Policy(props) {\r\n    const history = useHistory();\r\n\r\n    return(\r\n        <div>\r\n            <p style={{textAlign: 'center', color: 'white'}}>\r\n                You stinkyy poopy. All content on this site is satire. 2020 cosucous man all right reserved TM\r\n            </p>\r\n            <button className='button' onClick={() => history.push('/blackman')}>\r\n                Back\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Blackman from './components/Blackman';\nimport Footer from './components/Footer';\nimport Policy from './components/Policy';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Redirect from='/' to='/blackman' exact />\n        <Route path='/blackman' exact component={Blackman} />\n        <Route path='/policy' exact component={Policy} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}